Q: Explain the order of execution in an SQL query involving multiple clauses with an example
A: In SQL, the order of execution is not as same as the query structure.

Here is the standard query structure in SQL:
SELECT column(s)
FROM table
WHERE condition;

Now, you might think the SELECT statement is executed first, the FROM statement second, and the WHERE statement last.

However, that's not the case. The execution order does not align with the apparent order of the statements in SQL.

Instead, SQL has the following order of execution:

FROM: Identify the table(s) from which to get the data.
WHERE: Apply any specified condition(s) to filter the data.
GROUP BY: Group the data based on the specified columns.
HAVING: Further filter the grouped data based on the given conditions.
SELECT: Choose the columns to include in the result set.
DISTINCT: Remove duplicate rows from the result set.
ORDER BY: Sort the result set based on the specified columns.
LIMIT/OFFSET: Restrict the number of rows returned or set a starting point.


Therefore, the code SELECT column(s) FROM table WHERE condition; has the following execution order:
FROM table
WHERE condition
SELECT column(s)